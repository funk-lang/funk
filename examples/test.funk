data Reader = forall r a . {
  runReader: r -> a
}

trait Functor f {
  fmap: forall a b . (a -> b) -> f a -> f b
}

instance Functor forall r . Reader r = {
  fmap = \f reader -> Reader {
    runReader = \r -> f r
  }
}

let ask = Reader { runReader = \r -> r };

let identity = \x -> x;

fmap identity ask