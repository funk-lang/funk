name: Nightly Build & Release

on:
  schedule:
    - cron: '0 0 * * *' # Midnight UTC
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    name: Build & Release funkc and funkvm
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      CABAL_BUILDDIR: dist-newstyle/build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: 'latest'
          cabal-version: 'latest'

      - name: Update cabal packages
        run: cabal update

      - name: Build funkc
        run: cabal build funkc

      - name: Build funkvm
        run: cabal build funkvm

      - name: Find binaries
        id: bin-paths
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            funkc_bin=$(find dist-newstyle -type f -name 'funkc.exe' | head -n 1)
            funkvm_bin=$(find dist-newstyle -type f -name 'funkvm.exe' | head -n 1)
          else
            funkc_bin=$(find dist-newstyle -type f -name 'funkc' | head -n 1)
            funkvm_bin=$(find dist-newstyle -type f -name 'funkvm' | head -n 1)
          fi
          echo "funkc_bin=$funkc_bin" >> $GITHUB_OUTPUT
          echo "funkvm_bin=$funkvm_bin" >> $GITHUB_OUTPUT

      - name: Upload funkc binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: funkc-${{ runner.os }}
          path: ${{ steps.bin-paths.outputs.funkc_bin }}
          
      - name: Upload funkvm binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: funkvm-${{ runner.os }}
          path: ${{ steps.bin-paths.outputs.funkvm_bin }}

      - name: Release Nightly
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly-${{ github.run_id }}
          name: Nightly Release ${{ runner.os }} ${{ github.run_id }}
          prerelease: true
          files: |
            ${{ steps.bin-paths.outputs.funkc_bin }}
            ${{ steps.bin-paths.outputs.funkvm_bin }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}